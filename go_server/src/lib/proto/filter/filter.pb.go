// Code generated by protoc-gen-go. DO NOT EDIT.
// source: filter.proto

package filter

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	errmsg "go_server/src/lib/proto/errmsg"
	recall "go_server/src/lib/proto/recall"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HistoryFilterReq struct {
	UserId               string             `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RecallResp           *recall.RecallResp `protobuf:"bytes,2,opt,name=recallResp,proto3" json:"recallResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HistoryFilterReq) Reset()         { *m = HistoryFilterReq{} }
func (m *HistoryFilterReq) String() string { return proto.CompactTextString(m) }
func (*HistoryFilterReq) ProtoMessage()    {}
func (*HistoryFilterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f5303cab7a20d6f, []int{0}
}

func (m *HistoryFilterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryFilterReq.Unmarshal(m, b)
}
func (m *HistoryFilterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryFilterReq.Marshal(b, m, deterministic)
}
func (m *HistoryFilterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryFilterReq.Merge(m, src)
}
func (m *HistoryFilterReq) XXX_Size() int {
	return xxx_messageInfo_HistoryFilterReq.Size(m)
}
func (m *HistoryFilterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryFilterReq.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryFilterReq proto.InternalMessageInfo

func (m *HistoryFilterReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *HistoryFilterReq) GetRecallResp() *recall.RecallResp {
	if m != nil {
		return m.RecallResp
	}
	return nil
}

type HistoryFilterResp struct {
	Err                  *errmsg.ErrMsg     `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	RecallResp           *recall.RecallResp `protobuf:"bytes,2,opt,name=recallResp,proto3" json:"recallResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HistoryFilterResp) Reset()         { *m = HistoryFilterResp{} }
func (m *HistoryFilterResp) String() string { return proto.CompactTextString(m) }
func (*HistoryFilterResp) ProtoMessage()    {}
func (*HistoryFilterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f5303cab7a20d6f, []int{1}
}

func (m *HistoryFilterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryFilterResp.Unmarshal(m, b)
}
func (m *HistoryFilterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryFilterResp.Marshal(b, m, deterministic)
}
func (m *HistoryFilterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryFilterResp.Merge(m, src)
}
func (m *HistoryFilterResp) XXX_Size() int {
	return xxx_messageInfo_HistoryFilterResp.Size(m)
}
func (m *HistoryFilterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryFilterResp.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryFilterResp proto.InternalMessageInfo

func (m *HistoryFilterResp) GetErr() *errmsg.ErrMsg {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *HistoryFilterResp) GetRecallResp() *recall.RecallResp {
	if m != nil {
		return m.RecallResp
	}
	return nil
}

type HistoryAddReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	HistoryAction        int32    `protobuf:"varint,2,opt,name=history_action,json=historyAction,proto3" json:"history_action,omitempty"`
	ItemIds              []string `protobuf:"bytes,3,rep,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryAddReq) Reset()         { *m = HistoryAddReq{} }
func (m *HistoryAddReq) String() string { return proto.CompactTextString(m) }
func (*HistoryAddReq) ProtoMessage()    {}
func (*HistoryAddReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f5303cab7a20d6f, []int{2}
}

func (m *HistoryAddReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryAddReq.Unmarshal(m, b)
}
func (m *HistoryAddReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryAddReq.Marshal(b, m, deterministic)
}
func (m *HistoryAddReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryAddReq.Merge(m, src)
}
func (m *HistoryAddReq) XXX_Size() int {
	return xxx_messageInfo_HistoryAddReq.Size(m)
}
func (m *HistoryAddReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryAddReq.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryAddReq proto.InternalMessageInfo

func (m *HistoryAddReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *HistoryAddReq) GetHistoryAction() int32 {
	if m != nil {
		return m.HistoryAction
	}
	return 0
}

func (m *HistoryAddReq) GetItemIds() []string {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

type HistoryAddResp struct {
	Err                  *errmsg.ErrMsg `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *HistoryAddResp) Reset()         { *m = HistoryAddResp{} }
func (m *HistoryAddResp) String() string { return proto.CompactTextString(m) }
func (*HistoryAddResp) ProtoMessage()    {}
func (*HistoryAddResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f5303cab7a20d6f, []int{3}
}

func (m *HistoryAddResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryAddResp.Unmarshal(m, b)
}
func (m *HistoryAddResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryAddResp.Marshal(b, m, deterministic)
}
func (m *HistoryAddResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryAddResp.Merge(m, src)
}
func (m *HistoryAddResp) XXX_Size() int {
	return xxx_messageInfo_HistoryAddResp.Size(m)
}
func (m *HistoryAddResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryAddResp.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryAddResp proto.InternalMessageInfo

func (m *HistoryAddResp) GetErr() *errmsg.ErrMsg {
	if m != nil {
		return m.Err
	}
	return nil
}

func init() {
	proto.RegisterType((*HistoryFilterReq)(nil), "filter.HistoryFilterReq")
	proto.RegisterType((*HistoryFilterResp)(nil), "filter.HistoryFilterResp")
	proto.RegisterType((*HistoryAddReq)(nil), "filter.HistoryAddReq")
	proto.RegisterType((*HistoryAddResp)(nil), "filter.HistoryAddResp")
}

func init() { proto.RegisterFile("filter.proto", fileDescriptor_1f5303cab7a20d6f) }

var fileDescriptor_1f5303cab7a20d6f = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x35, 0x16, 0x53, 0x3b, 0x6d, 0x83, 0x2e, 0xa8, 0x69, 0x0e, 0x12, 0x02, 0x42, 0x4e, 0x09,
	0xc4, 0xb3, 0x87, 0x0a, 0x16, 0x7b, 0xf0, 0xb2, 0x47, 0x2f, 0xa1, 0xcd, 0xae, 0x71, 0x25, 0x35,
	0x71, 0x26, 0x0a, 0x7e, 0x85, 0xbf, 0x2c, 0xd9, 0x5d, 0x6a, 0x09, 0x2a, 0xe2, 0xf1, 0xbd, 0x79,
	0xb3, 0xef, 0xcd, 0xcc, 0xc2, 0xe4, 0x41, 0x55, 0xad, 0xc4, 0xa4, 0xc1, 0xba, 0xad, 0x99, 0x6b,
	0x50, 0x30, 0x91, 0x88, 0x1b, 0x2a, 0x0d, 0x1b, 0x4c, 0x50, 0x16, 0xab, 0xaa, 0x32, 0x28, 0xca,
	0xe1, 0xe8, 0x56, 0x51, 0x5b, 0xe3, 0xfb, 0x42, 0x8b, 0xb9, 0x7c, 0x61, 0x67, 0x30, 0x7c, 0x25,
	0x89, 0xb9, 0x12, 0xbe, 0x13, 0x3a, 0xf1, 0x88, 0xbb, 0x1d, 0x5c, 0x0a, 0x96, 0x01, 0x98, 0x66,
	0x2e, 0xa9, 0xf1, 0xf7, 0x43, 0x27, 0x1e, 0x67, 0x2c, 0xb1, 0xef, 0xf1, 0x6d, 0x85, 0xef, 0xa8,
	0x22, 0x05, 0xc7, 0x3d, 0x03, 0x6a, 0x58, 0x08, 0x03, 0x89, 0xa8, 0x5f, 0x1f, 0x67, 0x5e, 0x62,
	0xf3, 0xdd, 0x20, 0xde, 0x51, 0xc9, 0xbb, 0xd2, 0xbf, 0xac, 0x9e, 0x60, 0x6a, 0xad, 0xe6, 0x42,
	0xfc, 0x3a, 0xc8, 0x05, 0x78, 0x8f, 0x46, 0x99, 0xaf, 0x8a, 0x56, 0xd5, 0xcf, 0xda, 0xe1, 0x80,
	0x4f, 0x2d, 0x3b, 0xd7, 0x24, 0x9b, 0xc1, 0xa1, 0x6a, 0xe5, 0x26, 0x57, 0x82, 0xfc, 0x41, 0x38,
	0x88, 0x47, 0x7c, 0xd8, 0xe1, 0xa5, 0xa0, 0x28, 0x03, 0x6f, 0xd7, 0xeb, 0x2f, 0x33, 0x65, 0x1f,
	0x0e, 0xb8, 0x66, 0x09, 0x6c, 0xb1, 0x8d, 0x6a, 0x09, 0x3f, 0xb1, 0xa7, 0xeb, 0x5f, 0x23, 0x98,
	0xfd, 0x50, 0xa1, 0x26, 0xda, 0x63, 0x57, 0x00, 0x5f, 0x31, 0xd8, 0x49, 0x4f, 0x6a, 0xd6, 0x10,
	0x9c, 0x7e, 0x47, 0x77, 0xed, 0xd7, 0xe1, 0xfd, 0x79, 0x59, 0xe7, 0x24, 0xf1, 0x4d, 0x62, 0x4a,
	0x58, 0xa4, 0x95, 0x5a, 0xa7, 0xfa, 0x63, 0xa4, 0xa6, 0x65, 0xed, 0x6a, 0x74, 0xf9, 0x19, 0x00,
	0x00, 0xff, 0xff, 0x65, 0x11, 0x3b, 0x30, 0x5a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FilterClient is the client API for Filter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FilterClient interface {
	HistoryFilter(ctx context.Context, in *HistoryFilterReq, opts ...grpc.CallOption) (*HistoryFilterResp, error)
	HistoryAdd(ctx context.Context, in *HistoryAddReq, opts ...grpc.CallOption) (*HistoryAddResp, error)
}

type filterClient struct {
	cc *grpc.ClientConn
}

func NewFilterClient(cc *grpc.ClientConn) FilterClient {
	return &filterClient{cc}
}

func (c *filterClient) HistoryFilter(ctx context.Context, in *HistoryFilterReq, opts ...grpc.CallOption) (*HistoryFilterResp, error) {
	out := new(HistoryFilterResp)
	err := c.cc.Invoke(ctx, "/filter.Filter/HistoryFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filterClient) HistoryAdd(ctx context.Context, in *HistoryAddReq, opts ...grpc.CallOption) (*HistoryAddResp, error) {
	out := new(HistoryAddResp)
	err := c.cc.Invoke(ctx, "/filter.Filter/HistoryAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FilterServer is the server API for Filter service.
type FilterServer interface {
	HistoryFilter(context.Context, *HistoryFilterReq) (*HistoryFilterResp, error)
	HistoryAdd(context.Context, *HistoryAddReq) (*HistoryAddResp, error)
}

// UnimplementedFilterServer can be embedded to have forward compatible implementations.
type UnimplementedFilterServer struct {
}

func (*UnimplementedFilterServer) HistoryFilter(ctx context.Context, req *HistoryFilterReq) (*HistoryFilterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HistoryFilter not implemented")
}
func (*UnimplementedFilterServer) HistoryAdd(ctx context.Context, req *HistoryAddReq) (*HistoryAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HistoryAdd not implemented")
}

func RegisterFilterServer(s *grpc.Server, srv FilterServer) {
	s.RegisterService(&_Filter_serviceDesc, srv)
}

func _Filter_HistoryFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryFilterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilterServer).HistoryFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filter.Filter/HistoryFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilterServer).HistoryFilter(ctx, req.(*HistoryFilterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Filter_HistoryAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilterServer).HistoryAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filter.Filter/HistoryAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilterServer).HistoryAdd(ctx, req.(*HistoryAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Filter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "filter.Filter",
	HandlerType: (*FilterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HistoryFilter",
			Handler:    _Filter_HistoryFilter_Handler,
		},
		{
			MethodName: "HistoryAdd",
			Handler:    _Filter_HistoryAdd_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "filter.proto",
}
